<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.fruitfruit.web.product.ProductMapper">
    <insert id="addProduct" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO product
        (
            category_id,
            name,
            price,
            discount_rate,
            status,
            stock_quantity,
            content,
            created_at,
            updated_at
        )
        VALUES
            (
                #{form.categoryId},
                #{form.name},
                #{form.price},
                COALESCE(#{form.discountRate}, 0),
                1,
                #{form.stockQuantity},
                #{form.content},
                NOW(),
                NOW()
            )
    </insert>

    <!-- 상품 이미지 추가 -->
    <insert id="addProductImage" keyProperty="id">
        INSERT INTO product_image
        (
            product_id,
            file_name,
            file_path,
            url,
            created_at,
            updated_at
        )
        VALUES
            (
                #{image.productId},
                #{image.fileName},
                #{image.filePath},
                #{image.url},
                NOW(),
                NOW()
            )
    </insert>

    <!-- 상품 목록 조회 -->
    <select id="findProductAll" resultType="com.shop.fruitfruit.web.product.ProductResponseDto">
        SELECT
            p.id,
            status,
            category_name,
            name,
            price,
            discount_rate,
            COUNT(l.id) AS like_count,
            (SELECT COUNT(*) FROM review r WHERE r.product_id = p.id) AS review_count,
            stock_quantity,
            content,
            created_at,
            updated_at
        FROM
            product p
        JOIN
            category c ON p.category_id = c.id
        LEFT JOIN
            likes l ON p.id = l.product_id
        <where>
            <if test="productSearch.categoryId != null and productSearch.categoryId.size() > 0">
                AND p.category_id IN
                <foreach item="categoryId" collection="productSearch.categoryId" open="(" separator="," close=")">
                    #{categoryId}
                </foreach>
            </if>
            <if test="productSearch.status != null and productSearch.status.size() > 0">
                AND p.status IN
                <foreach item="status" collection="productSearch.status" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="productSearch.name != null and productSearch.name != ''">
                AND p.name LIKE CONCAT('%', #{productSearch.name}, '%')
            </if>
        </where>
        GROUP BY
            p.id, p.name, c.category_name
        ORDER BY
            p.id DESC
    </select>


    <select id="countProductStatus" resultType="com.shop.fruitfruit.web.product.CountStatus">
        SELECT
            COUNT(*) AS total_count,
            SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) AS on_sale_count,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) AS stop_sale_count,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) AS sold_out_count
        FROM
            product
    </select>
    
    <update id="stopSaleProduct">
        UPDATE
            product
        SET
            status = 2
        WHERE
            id IN
            <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
    </update>

    <select id="findProductById">
        SELECT
            id,
            category_id,
            name,
            price,
            discount_rate,
            status,
            stock_quantity,
            content,
            created_at,
            updated_at
        FROM
            product
        WHERE id = #{id}
    </select>
</mapper>